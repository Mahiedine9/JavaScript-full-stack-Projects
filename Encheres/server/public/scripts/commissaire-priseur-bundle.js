/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./scripts/commissaire-priseur.js":
/*!****************************************!*\
  !*** ./scripts/commissaire-priseur.js ***!
  \****************************************/
/***/ (() => {

eval("const socket = io();\nsocket.emit('identify', 'auctioneer');\nsocket.on('identify', () => {\n  console.log('Identified as an auctioneer');\n});\nsocket.on('offerReceived', (socketId, price) => {\n  console.log(\"je suis dans la on du commissaire priseur\");\n  const message = `Offre reçue de ${socketId}, prix : ${price}`;\n  displayOfferMessage(message);\n  updateCurrentBid(price);\n  socket.emit('currentBid', getCurrentBid());\n});\nsocket.on('alreadyAuctioneer', () => {\n  console.log('Another auctioneer is already connected');\n  errorMessage();\n});\nsocket.on('bidderDisconnected', () => {\n  updateState(`Un encherisseur d'id a quitté l'enchére !`);\n});\nsocket.on('noBidder', () => {\n  stopAuctionButton.disabled = true;\n  alert(\"Impossible de démarrer l'enchére, aucun encherisseur connecté\");\n  updateButton(false);\n});\nlet startAuctionButton;\nlet auctionItemInput;\nlet startPriceInput;\nlet stopAuctionButton;\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  startAuctionButton = document.querySelector(\".start-auction\");\n  auctionItemInput = document.getElementById(\"auction-item\");\n  startPriceInput = document.getElementById(\"start-price\");\n  stopAuctionButton = document.querySelector(\".stop-auction\");\n  stopAuctionButton.disabled = true;\n  startAuctionButton.disabled = true;\n  const currentPrice = document.getElementById(\"current-bid\");\n  currentPrice.textContent = startPriceInput.value.trim();\n  function checkInputs() {\n    if (auctionItemInput.value.trim() !== \"\" && startPriceInput.value.trim() !== \"\") {\n      startAuctionButton.disabled = false;\n    } else {\n      startAuctionButton.disabled = true;\n    }\n  }\n  auctionItemInput.addEventListener(\"input\", checkInputs);\n  startPriceInput.addEventListener(\"input\", checkInputs);\n  startAuctionButton.addEventListener(\"click\", () => {\n    updateButton(true);\n    startAuction(auctionItemInput, startPriceInput);\n  });\n  stopAuctionButton.addEventListener(\"click\", () => {\n    updateButton(false);\n    stopAuction();\n  });\n});\nfunction startAuction(item, price) {\n  socket.emit('auctionStarted', item.value.trim(), price.value.trim());\n}\nfunction stopAuction() {\n  const auctionItemInput = document.getElementById(\"auction-item\");\n  const currentBid = document.getElementById('current-bid');\n  displayOfferMessage(`Fin de lenchére. un ${auctionItemInput.value} conclus a ${currentBid.textContent}$`);\n  socket.emit('stop');\n}\nfunction displayOfferMessage(message) {\n  const offerMessage = document.getElementById('offer-message');\n  offerMessage.textContent = message;\n}\nfunction getCurrentBid() {\n  const currentBid = document.getElementById('current-bid');\n  return parseInt(currentBid.textContent);\n}\nfunction updateCurrentBid(price) {\n  const currentBid = document.getElementById('current-bid');\n  currentBid.textContent = parseInt(currentBid.textContent) + parseInt(price);\n}\nfunction updateButton(Bool) {\n  auctionStarted = Bool;\n  startAuctionButton.disabled = Bool;\n  auctionItemInput.disabled = Bool;\n  startPriceInput.disabled = Bool;\n}\nfunction errorMessage() {\n  const errorMessage = document.getElementById(\"error-message\");\n  const auctionControls = document.querySelector(\".auction-controls\");\n  const returnLink = document.querySelector(\".return-link\");\n  errorMessage.style.display = 'block';\n  auctionControls.style.display = 'none';\n  returnLink.style.display = 'none';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./scripts/commissaire-priseur.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./scripts/commissaire-priseur.js"]();
/******/ 	
/******/ })()
;