/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./scripts/user.client.js":
/*!********************************!*\
  !*** ./scripts/user.client.js ***!
  \********************************/
/***/ (() => {

eval("const socket = io();\nconst setup = async () => {\n  try {\n    const userData = await getUser();\n    displayUser(userData);\n    await Promise.all([getShows(), displayTickets()]);\n    document.getElementById('logout').addEventListener('click', logout);\n  } catch (error) {\n    console.error(`Erreur : ${error.message}`);\n  }\n};\nconst getUser = async () => {\n  const response = await fetch(`/user/me`);\n  if (!response.ok) {\n    throw new Error('Erreur lors de la récupération des informations de lutilisateur');\n  }\n  return await response.json();\n};\nconst getTickets = async () => {\n  const user = await getUser();\n  const response = await fetch(`/user/tickets/${user.id}`);\n  if (!response.ok) {\n    throw new Error('Erreur lors de la récupération des tickets de lutilisateur');\n  }\n  return await response.json();\n};\nconst addTicket = async showId => {\n  const user = await getUser();\n  const ticketResponse = await fetch(`/user/takeTicket/${showId}/${user.id}`, {\n    method: 'POST'\n  });\n  if (!ticketResponse.ok) {\n    throw new Error('Erreur lors de la prise de ticket');\n  }\n  displayTickets();\n};\nconst removeTicket = async ticketId => {\n  const user = await getUser();\n  const response = await fetch(`/user/removeTicket/${ticketId}/${user.id}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Erreur lors de la suppression du ticket');\n  }\n  displayTickets();\n};\nconst displayTickets = async () => {\n  const ticketList = document.getElementById('ticket-list');\n  ticketList.textContent = '';\n  try {\n    const tickets = await getTickets();\n    const ticketCounts = {};\n    tickets.forEach(ticket => {\n      ticketCounts[ticket.description] = (ticketCounts[ticket.description] || 0) + 1;\n    });\n    for (const [description, count] of Object.entries(ticketCounts)) {\n      const ticketElem = document.createElement('li');\n      ticketElem.textContent = `${description} (${count})`;\n      const deleteButton = document.createElement('button');\n      deleteButton.textContent = 'Supprimer';\n      deleteButton.addEventListener('click', async () => {\n        const ticketId = tickets.find(ticket => ticket.description === description)._id;\n        await removeTicket(ticketId);\n      });\n      ticketElem.appendChild(deleteButton);\n      ticketList.appendChild(ticketElem);\n    }\n  } catch (error) {\n    console.error(`Erreur : ${error.message}`);\n  }\n};\nconst getShows = async () => {\n  const response = await fetch('/shows/');\n  if (!response.ok) {\n    throw new Error('Erreur lors de la récupération des spectacles');\n  }\n  const shows = await response.json();\n  const list = document.getElementById('spectacle-list');\n  list.textContent = '';\n  shows.forEach(show => list.appendChild(buildShow(show)));\n};\nconst buildShow = show => {\n  const elem = document.createElement('tr');\n  elem.className = 'show';\n  elem.appendChild(buildTD(show.description, 'description'));\n  elem.appendChild(buildTD(show.places, 'seats'));\n  const buyButton = document.createElement('button');\n  buyButton.textContent = 'buy +1';\n  buyButton.className = 'buy-button';\n  buyButton.addEventListener('click', () => {\n    addTicket(show._id);\n  });\n  elem.appendChild(buyButton);\n  return elem;\n};\nconst buildTD = (content, className) => {\n  const TDelement = document.createElement('td');\n  TDelement.textContent = content;\n  TDelement.className = className;\n  return TDelement;\n};\nconst displayUser = userData => {\n  document.querySelector('#user h1').textContent = `Bonjour ${userData.name} !`;\n};\nconst logout = async () => {\n  const response = await fetch(`/access/logout`, {\n    method: 'GET'\n  });\n  if (response.ok) {\n    window.location.href = '/';\n  }\n};\nconst handleError = error => {\n  if (error.redirectTo) {\n    window.location.href = error.redirectTo;\n  } else {\n    console.log(`erreur : ${error.message}`);\n  }\n};\nsetup();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zY3JpcHRzL3VzZXIuY2xpZW50LmpzIiwibmFtZXMiOlsic29ja2V0IiwiaW8iLCJzZXR1cCIsInVzZXJEYXRhIiwiZ2V0VXNlciIsImRpc3BsYXlVc2VyIiwiUHJvbWlzZSIsImFsbCIsImdldFNob3dzIiwiZGlzcGxheVRpY2tldHMiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiYWRkRXZlbnRMaXN0ZW5lciIsImxvZ291dCIsImVycm9yIiwiY29uc29sZSIsIm1lc3NhZ2UiLCJyZXNwb25zZSIsImZldGNoIiwib2siLCJFcnJvciIsImpzb24iLCJnZXRUaWNrZXRzIiwidXNlciIsImlkIiwiYWRkVGlja2V0Iiwic2hvd0lkIiwidGlja2V0UmVzcG9uc2UiLCJtZXRob2QiLCJyZW1vdmVUaWNrZXQiLCJ0aWNrZXRJZCIsInRpY2tldExpc3QiLCJ0ZXh0Q29udGVudCIsInRpY2tldHMiLCJ0aWNrZXRDb3VudHMiLCJmb3JFYWNoIiwidGlja2V0IiwiZGVzY3JpcHRpb24iLCJjb3VudCIsIk9iamVjdCIsImVudHJpZXMiLCJ0aWNrZXRFbGVtIiwiY3JlYXRlRWxlbWVudCIsImRlbGV0ZUJ1dHRvbiIsImZpbmQiLCJfaWQiLCJhcHBlbmRDaGlsZCIsInNob3dzIiwibGlzdCIsInNob3ciLCJidWlsZFNob3ciLCJlbGVtIiwiY2xhc3NOYW1lIiwiYnVpbGRURCIsInBsYWNlcyIsImJ1eUJ1dHRvbiIsImNvbnRlbnQiLCJURGVsZW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwibmFtZSIsIndpbmRvdyIsImxvY2F0aW9uIiwiaHJlZiIsImhhbmRsZUVycm9yIiwicmVkaXJlY3RUbyIsImxvZyJdLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xpZW50LWFwcC8uL3NjcmlwdHMvdXNlci5jbGllbnQuanM/YzI0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzb2NrZXQgPSBpbygpO1xyXG5cclxuXHJcblxyXG5jb25zdCBzZXR1cCA9IGFzeW5jICgpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgdXNlckRhdGEgPSBhd2FpdCBnZXRVc2VyKCk7XHJcbiAgICBkaXNwbGF5VXNlcih1c2VyRGF0YSk7XHJcbiAgICBhd2FpdCBQcm9taXNlLmFsbChbZ2V0U2hvd3MoKSwgZGlzcGxheVRpY2tldHMoKV0pO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xvZ291dCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgbG9nb3V0KTtcclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcihgRXJyZXVyIDogJHtlcnJvci5tZXNzYWdlfWApO1xyXG4gIH1cclxuXHJcbn07XHJcblxyXG5jb25zdCBnZXRVc2VyID0gYXN5bmMgKCkgPT4ge1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC91c2VyL21lYCk7XHJcbiAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdFcnJldXIgbG9ycyBkZSBsYSByw6ljdXDDqXJhdGlvbiBkZXMgaW5mb3JtYXRpb25zIGRlIGx1dGlsaXNhdGV1cicpO1xyXG4gIH1cclxuICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG59O1xyXG5cclxuY29uc3QgZ2V0VGlja2V0cyA9IGFzeW5jICgpID0+IHtcclxuICBjb25zdCB1c2VyID0gYXdhaXQgZ2V0VXNlcigpO1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC91c2VyL3RpY2tldHMvJHt1c2VyLmlkfWApO1xyXG4gIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignRXJyZXVyIGxvcnMgZGUgbGEgcsOpY3Vww6lyYXRpb24gZGVzIHRpY2tldHMgZGUgbHV0aWxpc2F0ZXVyJyk7XHJcbiAgfVxyXG4gIHJldHVybiBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbn07XHJcblxyXG5jb25zdCBhZGRUaWNrZXQgPSBhc3luYyAoc2hvd0lkKSA9PiB7XHJcbiAgY29uc3QgdXNlciA9IGF3YWl0IGdldFVzZXIoKTtcclxuICBjb25zdCB0aWNrZXRSZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvdXNlci90YWtlVGlja2V0LyR7c2hvd0lkfS8ke3VzZXIuaWR9YCwgeyBtZXRob2Q6ICdQT1NUJyB9KTtcclxuICBpZiAoIXRpY2tldFJlc3BvbnNlLm9rKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0VycmV1ciBsb3JzIGRlIGxhIHByaXNlIGRlIHRpY2tldCcpO1xyXG4gIH1cclxuICBkaXNwbGF5VGlja2V0cygpO1xyXG59O1xyXG5cclxuY29uc3QgcmVtb3ZlVGlja2V0ID0gYXN5bmMgKHRpY2tldElkKSA9PiB7XHJcbiAgY29uc3QgdXNlciA9IGF3YWl0IGdldFVzZXIoKTtcclxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAvdXNlci9yZW1vdmVUaWNrZXQvJHt0aWNrZXRJZH0vJHt1c2VyLmlkfWAsIHsgbWV0aG9kOiAnREVMRVRFJyB9KTtcclxuICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0VycmV1ciBsb3JzIGRlIGxhIHN1cHByZXNzaW9uIGR1IHRpY2tldCcpO1xyXG4gIH1cclxuICBkaXNwbGF5VGlja2V0cygpO1xyXG59O1xyXG5cclxuY29uc3QgZGlzcGxheVRpY2tldHMgPSBhc3luYyAoKSA9PiB7XHJcbiAgY29uc3QgdGlja2V0TGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0aWNrZXQtbGlzdCcpO1xyXG4gIHRpY2tldExpc3QudGV4dENvbnRlbnQgPSAnJztcclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHRpY2tldHMgPSBhd2FpdCBnZXRUaWNrZXRzKCk7XHJcbiAgICBjb25zdCB0aWNrZXRDb3VudHMgPSB7fTtcclxuXHJcbiAgICB0aWNrZXRzLmZvckVhY2goKHRpY2tldCkgPT4ge1xyXG4gICAgICB0aWNrZXRDb3VudHNbdGlja2V0LmRlc2NyaXB0aW9uXSA9ICh0aWNrZXRDb3VudHNbdGlja2V0LmRlc2NyaXB0aW9uXSB8fCAwKSArIDE7XHJcbiAgICB9KTtcclxuXHJcbiAgICBmb3IgKGNvbnN0IFtkZXNjcmlwdGlvbiwgY291bnRdIG9mIE9iamVjdC5lbnRyaWVzKHRpY2tldENvdW50cykpIHtcclxuICAgICAgY29uc3QgdGlja2V0RWxlbSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XHJcbiAgICAgIHRpY2tldEVsZW0udGV4dENvbnRlbnQgPSBgJHtkZXNjcmlwdGlvbn0gKCR7Y291bnR9KWA7XHJcblxyXG4gICAgICBjb25zdCBkZWxldGVCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICAgICAgZGVsZXRlQnV0dG9uLnRleHRDb250ZW50ID0gJ1N1cHByaW1lcic7XHJcbiAgICAgIGRlbGV0ZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFzeW5jICgpID0+IHtcclxuICAgICAgICBjb25zdCB0aWNrZXRJZCA9IHRpY2tldHMuZmluZCh0aWNrZXQgPT4gdGlja2V0LmRlc2NyaXB0aW9uID09PSBkZXNjcmlwdGlvbikuX2lkO1xyXG4gICAgICAgIGF3YWl0IHJlbW92ZVRpY2tldCh0aWNrZXRJZCk7XHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGlja2V0RWxlbS5hcHBlbmRDaGlsZChkZWxldGVCdXR0b24pO1xyXG4gICAgICB0aWNrZXRMaXN0LmFwcGVuZENoaWxkKHRpY2tldEVsZW0pO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKGBFcnJldXIgOiAke2Vycm9yLm1lc3NhZ2V9YCk7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgZ2V0U2hvd3MgPSBhc3luYyAoKSA9PiB7XHJcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnL3Nob3dzLycpO1xyXG4gIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignRXJyZXVyIGxvcnMgZGUgbGEgcsOpY3Vww6lyYXRpb24gZGVzIHNwZWN0YWNsZXMnKTtcclxuICB9XHJcbiAgY29uc3Qgc2hvd3MgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgY29uc3QgbGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzcGVjdGFjbGUtbGlzdCcpO1xyXG4gIGxpc3QudGV4dENvbnRlbnQgPSAnJztcclxuICBzaG93cy5mb3JFYWNoKHNob3cgPT4gbGlzdC5hcHBlbmRDaGlsZChidWlsZFNob3coc2hvdykpKTtcclxufTtcclxuXHJcbmNvbnN0IGJ1aWxkU2hvdyA9ICBzaG93ID0+IHtcclxuICBjb25zdCBlbGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgndHInKTtcclxuICBlbGVtLmNsYXNzTmFtZSA9ICdzaG93JztcclxuICBlbGVtLmFwcGVuZENoaWxkKGJ1aWxkVEQoc2hvdy5kZXNjcmlwdGlvbiwgJ2Rlc2NyaXB0aW9uJykpO1xyXG4gIGVsZW0uYXBwZW5kQ2hpbGQoYnVpbGRURChzaG93LnBsYWNlcywgJ3NlYXRzJykpO1xyXG5cclxuICBjb25zdCBidXlCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcclxuICBidXlCdXR0b24udGV4dENvbnRlbnQgPSAnYnV5ICsxJztcclxuICBidXlCdXR0b24uY2xhc3NOYW1lID0gJ2J1eS1idXR0b24nO1xyXG4gIGJ1eUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGFkZFRpY2tldChzaG93Ll9pZCk7XHJcbiAgfSk7XHJcblxyXG4gIGVsZW0uYXBwZW5kQ2hpbGQoYnV5QnV0dG9uKTtcclxuXHJcbiAgcmV0dXJuIGVsZW07XHJcbn07XHJcblxyXG5jb25zdCBidWlsZFREID0gKGNvbnRlbnQsIGNsYXNzTmFtZSkgPT4ge1xyXG4gIGNvbnN0IFREZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3RkJyk7XHJcbiAgVERlbGVtZW50LnRleHRDb250ZW50ID0gY29udGVudDtcclxuICBURGVsZW1lbnQuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xyXG4gIHJldHVybiBURGVsZW1lbnQ7XHJcbn07XHJcblxyXG5jb25zdCBkaXNwbGF5VXNlciA9ICh1c2VyRGF0YSkgPT4ge1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN1c2VyIGgxJykudGV4dENvbnRlbnQgPSBgQm9uam91ciAke3VzZXJEYXRhLm5hbWV9ICFgO1xyXG59O1xyXG5cclxuY29uc3QgbG9nb3V0ID0gYXN5bmMgKCkgPT4ge1xyXG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYC9hY2Nlc3MvbG9nb3V0YCwgeyBtZXRob2Q6ICdHRVQnIH0pO1xyXG4gIGlmIChyZXNwb25zZS5vaykge1xyXG4gICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAnLyc7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgaGFuZGxlRXJyb3IgPSBlcnJvciA9PiB7XHJcbiAgaWYgKGVycm9yLnJlZGlyZWN0VG8pIHtcclxuICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gZXJyb3IucmVkaXJlY3RUbztcclxuICB9IGVsc2Uge1xyXG4gICAgY29uc29sZS5sb2coYGVycmV1ciA6ICR7ZXJyb3IubWVzc2FnZX1gKTtcclxuICB9XHJcbn07XHJcblxyXG5zZXR1cCgpO1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBR0MsRUFBRSxDQUFDLENBQUM7QUFJbkIsTUFBTUMsS0FBSyxHQUFHLE1BQUFBLENBQUEsS0FBWTtFQUN4QixJQUFJO0lBQ0YsTUFBTUMsUUFBUSxHQUFHLE1BQU1DLE9BQU8sQ0FBQyxDQUFDO0lBQ2hDQyxXQUFXLENBQUNGLFFBQVEsQ0FBQztJQUNyQixNQUFNRyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFDQyxRQUFRLENBQUMsQ0FBQyxFQUFFQyxjQUFjLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDakRDLFFBQVEs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\n//# sourceURL=webpack-internal:///./scripts/user.client.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./scripts/user.client.js"]();
/******/ 	
/******/ })()
;