/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./scripts/user.client.js":
/*!********************************!*\
  !*** ./scripts/user.client.js ***!
  \********************************/
/***/ (() => {

eval("const socket = io();\nconst setup = async () => {\n  socket.on('showDeleted', desc => deleteTicketByDescription(desc));\n  try {\n    const userData = await getUser();\n    displayUser(userData);\n    await Promise.all([getShows(), displayTickets()]);\n    document.getElementById('logout').addEventListener('click', logout);\n  } catch (error) {\n    console.error(`Erreur : ${error.message}`);\n  }\n};\nconst displayMessage = message => {\n  const messageElement = document.createElement('div');\n  messageElement.textContent = message;\n  messageElement.className = 'error-message';\n  const messageContainer = document.getElementById('message-container');\n  messageContainer.appendChild(messageElement);\n  setTimeout(() => {\n    messageContainer.removeChild(messageElement);\n  }, 5000);\n};\nconst getUser = async () => {\n  const response = await fetch(`/user/me`);\n  if (!response.ok) {\n    throw new Error('Erreur lors de la récupération des informations de lutilisateur');\n  }\n  return await response.json();\n};\nconst getTickets = async () => {\n  const user = await getUser();\n  const response = await fetch(`/user/tickets/${user.id}`);\n  if (!response.ok) {\n    throw new Error('Erreur lors de la récupération des tickets de lutilisateur');\n  }\n  return await response.json();\n};\nconst addTicket = async showId => {\n  const user = await getUser();\n  const ticketResponse = await fetch(`/user/takeTicket/${showId}/${user.id}`, {\n    method: 'POST'\n  });\n  if (!ticketResponse.ok) {\n    displayMessage('il reste plus de place pour ce spectacle');\n  } else {\n    BuyTicket(showId);\n    updateShow(showId);\n    displayTickets();\n  }\n};\nconst updateShow = async showId => {\n  const show = await getShow(showId);\n  const showElem = document.getElementById(`show-${showId}`);\n  const seatsElem = showElem.querySelector('.seats');\n  seatsElem.textContent = show.places.toString();\n};\nconst getShow = async showId => {\n  const response = await fetch(`/shows/${showId}`);\n  if (!response.ok) {\n    throw new Error('Erreur lors de la récupération du spectacle');\n  }\n  return await response.json();\n};\nconst removeTicket = async ticket => {\n  const user = await getUser();\n  const shows = await getShows();\n  const showId = shows.find(show => show.description === ticket.description)._id;\n  const response = await fetch(`/user/removeTicket/${ticket._id}/${user.id}/${showId}`, {\n    method: 'DELETE'\n  });\n  if (!response.ok) {\n    throw new Error('Erreur lors de la suppression du ticket');\n  }\n  updateShow(showId);\n  displayTickets();\n};\nconst getShowIdByDescription = async description => {\n  const shows = await getShows();\n  for (const show of shows) {\n    if (show.description === description) {\n      return show._id;\n    }\n  }\n  return null;\n};\nconst displayTickets = async () => {\n  const ticketList = document.getElementById('ticket-list');\n  ticketList.textContent = '';\n  try {\n    const tickets = await getTickets();\n    const ticketCounts = {};\n    tickets.forEach(ticket => {\n      ticketCounts[ticket.description] = (ticketCounts[ticket.description] || 0) + 1;\n    });\n    for (const [description, count] of Object.entries(ticketCounts)) {\n      const ticketElem = document.createElement('li');\n      ticketElem.textContent = `${description} (${count})`;\n      const deleteButton = document.createElement('button');\n      deleteButton.textContent = 'Supprimer';\n      deleteButton.addEventListener('click', async () => {\n        const ticket = tickets.find(ticket => ticket.description === description);\n        await removeTicket(ticket);\n      });\n      ticketElem.appendChild(deleteButton);\n      ticketList.appendChild(ticketElem);\n    }\n  } catch (error) {\n    console.error(`Erreur : ${error.message}`);\n  }\n};\nconst getShows = async () => {\n  const response = await fetch('/shows/');\n  if (!response.ok) {\n    throw new Error('Erreur lors de la récupération des spectacles');\n  }\n  const shows = await response.json();\n  const list = document.getElementById('spectacle-list');\n  list.textContent = '';\n  shows.forEach(show => list.appendChild(buildShow(show)));\n  return shows;\n};\nconst buildShow = show => {\n  const elem = document.createElement('div');\n  elem.className = 'show';\n  elem.id = `show-${show._id}`;\n  const description = document.createElement('div');\n  description.className = 'description';\n  description.appendChild(buildTD(show.description, 'description'));\n  elem.appendChild(description);\n  const seats = document.createElement('div');\n  seats.className = 'seats';\n  seats.appendChild(buildTD(show.places, 'seats'));\n  description.appendChild(seats);\n  const buyButton = document.createElement('button');\n  buyButton.textContent = 'buy +1';\n  buyButton.className = 'buy-button';\n  buyButton.addEventListener('click', () => {\n    addTicket(show._id);\n  });\n  description.appendChild(buyButton);\n  return elem;\n};\nconst buildTD = (content, className) => {\n  const TDelement = document.createElement('td');\n  TDelement.textContent = content;\n  TDelement.className = className;\n  return TDelement;\n};\nconst displayUser = userData => {\n  document.querySelector('#user h1').textContent = `Bonjour ${userData.name} !`;\n};\nconst logout = async () => {\n  const response = await fetch(`/access/logout`, {\n    method: 'GET'\n  });\n  if (response.ok) {\n    window.location.href = '/';\n  }\n};\nconst handleError = error => {\n  if (error.redirectTo) {\n    window.location.href = error.redirectTo;\n  } else {\n    console.log(`erreur : ${error.message}`);\n  }\n};\nfunction BuyTicket(showId) {\n  socket.emit('buy', showId);\n}\nconst deleteTicketByDescription = async description => {\n  try {\n    const user = await getUser();\n    const allTickets = await getTickets();\n    const tickets = allTickets.filter(ticket => ticket.description === description);\n    for (const ticket of tickets) {\n      await removeTicket(ticket._id);\n    }\n    await displayTickets();\n  } catch (error) {\n    console.error(`Erreur : ${error.message}`);\n  }\n};\nsetup();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./scripts/user.client.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./scripts/user.client.js"]();
/******/ 	
/******/ })()
;