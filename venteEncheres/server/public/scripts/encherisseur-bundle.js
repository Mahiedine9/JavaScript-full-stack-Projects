/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./scripts/encherisseur.js":
/*!*********************************!*\
  !*** ./scripts/encherisseur.js ***!
  \*********************************/
/***/ (() => {

eval("const socket = io();\ndisableBidButtons(true);\nsocket.emit('identify', 'bidder');\nsocket.on('identify', () => {\n  console.log('Identified as a bidder');\n});\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  updateState(\"Bienvenue\");\n});\nsocket.on('startData', (item, price) => auctionStarted(item, price));\nsocket.on('stopAuction', () => {\n  console.log(`Fin de l'enchère, merci pour votre participation.`);\n  updateState(\"Enchère terminée, elle est remporté par une autre personne.\");\n  disableBidButtons(true);\n});\nsocket.on('alreadyAuction', () => {\n  console.log(`Une enchère est déjà en cours, veuillez patienter ou revenir plus tard.`);\n  updateState(\"Une enchère est déjà en cours.\");\n  disableBidButtons(true);\n});\nsocket.on('winner', price => {\n  const state = document.getElementById(\"state\");\n  state.textContent = `Félicitations ! Vous avez remporté l'enchère a ${price}`;\n  init();\n});\nfunction init() {\n  const nameItem = document.getElementById(\"object-name\");\n  const currentPrice = document.getElementById(\"current-price\");\n  const bidButtons = document.querySelectorAll(\".bid-option\");\n  nameItem.textContent = \"Objet\";\n  currentPrice.textContent = \"-\";\n  bidButtons.forEach(button => {\n    button.disabled = true;\n  });\n}\nfunction auctionStarted(item, price) {\n  const nameItem = document.getElementById(\"object-name\");\n  const currentPrice = document.getElementById(\"current-price\");\n  updateState(\"Une enchère vient de commencer.\");\n  console.log(`Démarrage de l'enchère : ${item}, prix initial : ${price}`);\n  disableBidButtons(false);\n  nameItem.textContent = item;\n  currentPrice.textContent = price;\n}\nfunction updatePrice(price) {\n  const currentPrice = document.getElementById(\"current-price\");\n  let currentPriceValue = parseInt(currentPrice.textContent);\n  currentPriceValue += parseInt(price);\n  currentPrice.textContent = currentPriceValue;\n}\nfunction updateState(message) {\n  const state = document.getElementById(\"state\");\n  state.textContent = message;\n}\nfunction disableBidButtons(disabled) {\n  const bidButtons = document.querySelectorAll(\".bid-option\");\n  bidButtons.forEach(button => {\n    button.disabled = disabled;\n  });\n}\nfunction offerReceived(price) {\n  console.log(\"je suis dans la methode offer du 2eme encherisseur\");\n  updateState(`nouvelle enchére de ${price}`);\n  updatePrice(price);\n}\nconst bidButtons = document.querySelectorAll(\".bid-option\");\nbidButtons.forEach(button => {\n  button.addEventListener(\"click\", () => {\n    const bidPrice = button.dataset.bid;\n    console.log(`Prix d'enchère sélectionné : ${bidPrice}`);\n    socket.emit('placeBid', bidPrice);\n    updateState(`Vous avez fait une offre de ${bidPrice} !`);\n    updatePrice(bidPrice);\n  });\n});\nsocket.on('offerReceived', (socketId, price) => offerReceived(price));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./scripts/encherisseur.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./scripts/encherisseur.js"]();
/******/ 	
/******/ })()
;